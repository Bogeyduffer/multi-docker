# require sudo to that we have proper permission to execute code
sudo: required

language: generic 

# Ensure Docker is pre-installed
services:
  - docker

# Things to be done before testing or deployment
before_install:
  # build app for docker development
  - docker build -t bogeyduffer/docker-client -f ./client/Dockerfile.dev ./client

# A series of commands to run tests - return codes of other zero (0) assumes error
script:
  - docker run -e CI=true bogeyduffer/docker-client npm run test -- --coverage


# if the tests run successfully, build all the production images.
after_sucess:
  - docker build -t bogeyduffer/multi-client ./client 
  - docker build -t bogeyduffer/multi-ngnix ./nginx
  - docker build -t bogeyduffer/multi-server ./server
  - docker build -t bogeyduffer/multi-worker ./worker

# Log in to Docker CLI
  # This command gets the password and passes it to the docker login via standard in
  # - docker login -u $DOCKER_ID -p $DOCKER_PASSWORD docker.io
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  #         ^               ^                                    ^
  #         |               |                                    |- Inserts Received Password
  #         |               |- Pipes in (passes) Password to docker login
  #         |- Gets the password



# Push new images to Docker Hub
  - docker push bogeyduffer/multi-client
  - docker push bogeyduffer/multi-ngnix
  - docker push bogeyduffer/multi-server
  - docker push bogeyduffer/multi-worker

# # Setup deploy script
# deploy:
#   provider: elasticbeanstalk
#   region: 'us-east-1'
#   app: 'multi-docker'
#   env: 'MultiDocker-env'
#   bucket_name: 'elasticbeanstalk-us-east-1-640819054210'
#   bucket_path: 'multi-docker'
#   on:
#     branch: master

#   # possible code ?
#   # access_key_id: $AWS_ACCESS_KEY
#   # secret_access_key: $AWS_SECRET_KEY

  
#   # # video code
#   access_key_id: $AWS_ACCESS_KEY
#     secure: $AWS_SECRET_KEY


